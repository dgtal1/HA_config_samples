# webhook needs to be called with HTTP method: POST
# empty JSON data need to be provided even if there are URL parameters used; otherwise HA call fails
# sample url: /api/webhook/grenton_webhook_state_change_url?entity_id=light.entrance&state=on
- id: 'webhook_state_change_url'
  alias: 'Webhook-based state change'
  description: ''
  trigger:
  - platform: webhook
    webhook_id: grenton_webhook_state_change_url
  condition: []
  action:
  - data_template:
      entity_id: >-
        {% set entity_id = trigger.query['entity_id'] %}
        {{entity_id}}
    service_template: >-      
      {% set entity_id = trigger.query['entity_id'] %}
      {% set domain = entity_id.split('.')|first %}
      {% set state = trigger.query['state'] %}
      {% if state == 'on' %} 
      {% set service = domain+'.'+'turn_on' %}
      {% else %}
      {% set service = domain+'.'+'turn_off' %}
      {% endif %}      
      {{service}}

# webhook needs to be called with HTTP method: POST
# parameters are enclosed in JSON payload
# sample url: /api/webhook/grenton_webhook_state_change_json
# JSON payload:
# {
#   "entity_id": "light.entrance",
#   "state": "on"
# }
- id: 'webhook_state_change_json'
  alias: 'Webhook-based state change'
  description: ''
  trigger:
  - platform: webhook
    webhook_id: grenton_webhook_state_change_json
  condition: []
  action:
  - data_template:
      entity_id: >-
        {% set entity_id = trigger.json['entity_id'] %}
        {{entity_id}}
    service_template: >-      
      {% set entity_id = trigger.json['entity_id'] %}
      {% set domain = entity_id.split('.')|first %}
      {% set state = trigger.json['state'] %}
      {% if state == 'on' %} 
      {% set service = domain+'.'+'turn_on' %}
      {% else %}
      {% set service = domain+'.'+'turn_off' %}
      {% endif %}      
      {{service}}      

# set state for multiple entities at once
# webhook needs to be called with HTTP method: POST
# parameters are enclosed in JSON payload
# sample url: /api/webhook/grenton_webhook_state_change_json
# JSON payload - see: python_scripts/set_state_multiple.py
- id: 'webhook_state_change_json_multiple_states'
  alias: 'Webhook-based state change for multiple entities'
  description: ''
  trigger:
  - platform: webhook
    webhook_id: grenton_webhook_state_change_json_multiple
  condition: []
  action:
  - data_template: 
      payload: '{{trigger.json}}'
    service: python_script.set_state_multiple

# set state for multiple entities at once
# webhook needs to be called with HTTP method: POST
# parameters are enclosed in JSON payload
# sample url: /api/webhook/grenton_webhook_state_change_json_light
# JSON payload - see: python_scripts/set_state_multiple.py
- id: 'webhook_state_change_json_multiple_states'
  alias: 'Webhook-based state change for multiple entities'
  description: ''
  trigger:
  - platform: webhook
    webhook_id: grenton_webhook_state_change_json_light
  condition: []
  action:
  - data_template: 
      payload: '{{trigger.json}}'
    service: python_script.set_state_multiple_light

# Push notification with a message text received by webhook
# webhook needs to be called with HTTP method: POST
# parameters are enclosed in JSON payload
# sample url: /api/webhook/webhook_for_mobile_notification_example
# JSON payload:
# {
#     "message": "This is a test!"
# }
- id: 'webhook_notify_mobile'
  alias: '[WEBHOOK] Notify mobile'
  description: ''
  trigger:
  - platform: webhook
    webhook_id: webhook_for_mobile_notification_example
  condition: []
  action:
  - data_template:
      message: >-
        {{trigger.json['message']}}
    service: notify.mobile_app_ios_przemek
